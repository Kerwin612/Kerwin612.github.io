#!/bin/bash


# We still need this.
windows() { [[ -n "$WINDIR" ]]; }


# Cross-platform symlink function. With one parameter, it will check
# whether the parameter is a symlink. With two parameters, it will create
# a symlink to a file or directory, with syntax: link $linkname $target
ext-link() {
    if [[ -z "$2" ]]; then
        # Link-checking mode.
        if windows; then
            fsutil reparsepoint query "$1" > /dev/null
        else
            [[ -h "$1" ]]
        fi
    else
        # Link-creation mode.
        if windows; then
			if [[ ${2:0:1} == "." ]]; then
				if [[ -d "$2" ]]; then
					temp=$(cd $2;pwd)
				else
					temp=$(cd ${2%/*};pwd)/${2##*/}
				fi
			else
				temp=$2
			fi
			if [[ ${temp:0:10} == "/cygdrive/" ]]; then
				temp=${temp:10:1}:${temp:12}
			fi
			if [[ ${temp:1:1} != ":" ]]; then
				temp=${temp:1:1}:${temp:2}
			fi
			target=${temp//\//\\}
            # Windows needs to be told if it's a directory or not. Infer that.
            # Also: note that we convert `/` to `\`. In this case it's necessary.
            if [[ -d "$2" ]]; then
				echo 'link dir '$1' to '$target
				cmd <<< "mklink /D \"$1\" \"$target\"" > /dev/null
            else
				echo 'link file '$1' to '$target
				cmd <<< "mklink \"$1\" \"$target\"" > /dev/null
            fi
        else
            # You know what? I think ln's parameters are backwards.
            ln -s "$2" "$1"
        fi
    fi
}


# Remove a link, cross-platform.
ext-rmlink() {
    if windows; then
        # Again, Windows needs to be told if it's a file or directory.
        if [[ -d '$1' ]]; then
            rmdir '$1'
        else
            rm '$1'
        fi
    else
        rm '$1'
    fi
}


# Toggle directory between UHOME[/cygdrive/u/u~u/a0a/] and HOME[/cygdrive/i/a0a/]
ext-cd() {
	temp=$(pwd)
	if [[ ${temp:10:1} == 'u' ]]; then
		cd $SHOME/./
		if [[ $1 != $HOME ]]; then
			cd ./${temp:20}
		fi
	elif [[ ${temp:12:3} == 'a0a' ]]; then
		cd $HOME/../
		if [[ $1 != $HOME ]]; then
			cd ./${temp:16}
		fi
	fi
}


ext-vbox() {
	cmd <<< "\"$VBOX_MSI_INSTALL_PATH\VirtualBox.exe\"" > /dev/null & 
}
